@page "/coffee"
@inject HttpClient Http

<PageTitle>Coffee</PageTitle>

<h1>Coffee</h1>

<p>This component demonstrates fetching data from the sample api.</p>

@if (coffees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentDataGrid Id="CoffeeGrid" Items="@coffees" GridTemplateColumns="1fr 1fr 3fr 2fr 1fr" TGridItem="CoffeeInfo">
        <PropertyColumn Title="Id" Property="@(c => c!.Id)" Sortable="true" Align="Align.Start" />
        <PropertyColumn Title="Title" Property="@(c => c!.Title)" Sortable="true" Align="Align.Start" />
        <PropertyColumn Title="Description" Property="@(c => c!.Description)" Sortable="true" Align="Align.Start"
            Class="multiline-text" />
        <TemplateColumn Title="Ingredients" Sortable="true" Align="Align.Start">
            <ul>
                @foreach (var ingredient in @context.Ingredients)
                {
                    <li>@ingredient</li>
                }
            </ul>
        </TemplateColumn>
        <TemplateColumn Title="Image" Sortable="true" Align="Align.Center">
            <img src="@context.Image" width="120" height="120" />
        </TemplateColumn>
    </FluentDataGrid>
}

@code {
    private IQueryable<CoffeeInfo>? coffees;

    protected override async Task OnInitializedAsync()
    {
        coffees = (await Http.GetFromJsonAsync<CoffeeInfo[]>("https://api.sampleapis.com/coffee/hot"))?.AsQueryable();
    }

    public class CoffeeInfo
    {
        public int Id { get; set; }
        public string Title { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string[] Ingredients { get; set; } = [];
        public string Image { get; set; } = string.Empty;
    }
}
